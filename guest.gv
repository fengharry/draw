digraph sev{
	node[shape = box; width = 2];
	label = "SEV Enabled Guest\n "; labelloc = t;
	ranksep = 0.25;
	nodesep = 0.25;

	{
		rank = same;
		launch[label = "Launch"; color = red];
		launch_start[label = "LAUNCH_START"];
		launch_update[label = "LAUNCH_UPDATE"];
		launch_finish[label = "LAUNCH_FINISH"];
		launch_start -> launch_update -> launch_finish[minlen = 2];
	}
	
	launch -> execute[style = invis];
	
	{
		rank = same;
		execute[label = "Execute"; color = red];
		activate[label = "ACTIVATE"];
		deactivate[label = "DEACTIVATE"];
		df_flash[label = "DF_FLUSH"];
		activate -> deactivate -> df_flash[minlen = 2];
	}
	
	execute -> migrate[style = invis];
	
	{
		rank = same;
		migrate[label = "Migrate"; color = red];
		send_start[label = "SEND_START"];
		send_update[label = "SEND_UPDATE"];
		send_finish[label = "SEND_FINISH"];
		send_start -> send_update -> send_finish[minlen = 2];
	}
	
	send_start -> receive_start[style = invis];
	
	{
		rank = same;
		receive_start[label = "RECEIVE_START"];
		receive_update[label = "RECEIVE_UPDATE"];
		receive_finish[label = "RECEIVE_FINISH"];
		receive_start -> receive_update -> receive_finish[minlen = 2];
	}
	
	migrate -> stop[style = invis; minlen = 2;];
	
	{
		rank = same;
		stop[label = "Decommission"; color = red];
		decommission[label = "DECOMMISSION"];
	}
	
	stop -> debug[style = invis; minlen = 2;];
	
	{
		rank = same;
		debug[label = "Debug"; color = red];
		dbg_encrypt[label = "DBG_ENCRYPT"];
		dbg_decrypt[label = "DBG_DECRYPT"];
		dbg_encrypt -> dbg_decrypt[style = invis; minlen = 2;];
	}

}